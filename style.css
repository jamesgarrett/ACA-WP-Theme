@charset "UTF-8";
/*
Theme Name:   ACA | [THEME]
Theme URI:    http://architects.agency/themes/[THEME]/
Description:  [THEME] by Architect Creative Agency.
Author:       ACA Team
Author URI:   http://architects.agency
Version:      0.0
*/
@import url(./lib/bower_components/octicons/octicons/octicons.css);
@import url(./assets/fonts/Super-Clarendon/font.css);
/* line 5, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

/* line 22, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
html {
  line-height: 1; }

/* line 24, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
ol, ul {
  list-style: none; }

/* line 26, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 28, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

/* line 30, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
q, blockquote {
  quotes: none; }
  /* line 103, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
  q:before, q:after, blockquote:before, blockquote:after {
    content: "";
    content: none; }

/* line 32, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
a img {
  border: none; }

/* line 116, ../../../../../../../../CodeKit.app/Contents/Resources/engines/compass/compass-core/stylesheets/compass/reset/_utilities.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/*————————————————————————————————————————
|| CUSTOMIZE TEMPLATE SCSS
||
|| Any variables you want to add or change
|| from their default settings can be done
|| in this file. For all variables see:
|| > lib/styles/vars/_defaults.scss
*/
/*
|| TYPOGRAPHY
*/
/*
|| COLORS
*/
/**
 * Map set
 *
 * @param 	Map 	$map 		The map to use
 * @param 	String 	$key 		The key to update
 * @param 	Mixed 	$value 		The new value
 * @return 	Map 			The new map
 */
/**
 * Get the column width in percent for the global or a specific context
 *
 * @param 	int 		$columns 					The number of columns to calculate
 * @param 	int 		$context : $gridle-columns-count 	 	The context to use
 * @return 	percentage 							The width in percent
 */
/**
 *  Get a state map
 *
 * @param 	string 		$name 		The name of the state to get
 * @return 	map 				A state map object
 */
/**
 * Check if a state exist :
 *
 * @param 	string 		$name 		The name of the state to check
 * @return 	Boolean 			true is exist
 */
/**
 * Get the media queries variables :
 *
 * @param 	int 		$index 	 	The media query indes
 * @param 	String 		$var 		The media query variable name
 * @return 	String|int 			The variable value
 */
/**
 * Get a variable
 *
 * @param 	String 		$varName 				The variable name
 * @param  	String 		$stateMap-or-stateName 	 	The state name or a map state value
 * @return 	Mixed 							The finded value
 */
/**
 * Set a variable in a state
 * @param 	Mixed $stateName-or-stateIndex 	The state name of state index
 * @param  	String $var                    		Variable name to assign
 * @param  	Mixed $newValue          		The new value to assign
 * @return 	List                         			The states list (full)
 */
/**
 * Generate a column
 *
 * @param 	String 		$name 			The column name (often count)
 * @param 	int 		$columns 		The column count that the column will take
 * @param 	int 		$context 		The context on witch the with will be calculed
 * @param 	Boolean 	$generateClasses 	Set if the column has to be generated in css
 */
/**
 * Generate classname
 *
 * @param 	List 		$parrern 	The pattern to use to generate classname
 * @param 	String 		$state 		The state
 * @param 	int 		$count 		The column count
 */
/**
 * Get the media query for a particular state, or with, etc...
 *
 * @param 	Mixed 		$state-or-min-width 		The state name of the min with
 * @param 	Mixed 		$max-width 			The max width if first param is a min width
 * @return 	String 						The media query string without the @media
 */
/**
 * Get states count
 * 
 * @return 	int 	The number of states defined
 */
/**
 * Setup
 */
/**
 *  Register a clear each class
 */
/**
 * Register a special class
 */
/**
 * Register default states
 */
/**
 * Register default mobile first states :
 */
/**
 * Set the debug device (not used for now)
 * 
 * @param 	String 		$state 		The state to update
 * @para m 	String 		$device 	The device to use (iphone, etc...)
 */
/**
 * Parent clear each
 */
/**
 * Vertical align :
 */
/**
 * Show inline
 *
 * @param 	String 		$state 		The state name
 */
/**
 * Generate a custom class for all the states
 *
 * @param 	list 	$pattern 		The name pattern of the class
 * @param 	list 	$statesNames 		The states names to generate
 */
/* line 1, lib/styles/util/_clearfix.scss */
.clearfix, .list-item {
  *zoom: 1; }
  /* line 3, lib/styles/util/_clearfix.scss */
  .clearfix:before, .list-item:before, .clearfix:after, .list-item:after {
    content: " ";
    display: table; }
  /* line 4, lib/styles/util/_clearfix.scss */
  .clearfix:after, .list-item:after {
    clear: both; }

/* line 1, lib/styles/base/_0-normalize.scss */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

/* line 7, lib/styles/base/_0-normalize.scss */
body {
  margin: 0; }

/* line 11, lib/styles/base/_0-normalize.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/* line 15, lib/styles/base/_0-normalize.scss */
audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

/* line 20, lib/styles/base/_0-normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/* line 25, lib/styles/base/_0-normalize.scss */
[hidden], template {
  display: none; }

/* line 29, lib/styles/base/_0-normalize.scss */
a {
  background: transparent; }

/* line 33, lib/styles/base/_0-normalize.scss */
a:active, a:hover {
  outline: 0; }

/* line 37, lib/styles/base/_0-normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/* line 41, lib/styles/base/_0-normalize.scss */
b, strong {
  font-weight: bold; }

/* line 45, lib/styles/base/_0-normalize.scss */
dfn {
  font-style: italic; }

/* line 49, lib/styles/base/_0-normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/* line 54, lib/styles/base/_0-normalize.scss */
small {
  font-size: 0.875rem; }

/* line 58, lib/styles/base/_0-normalize.scss */
sub, sup {
  font-size: 0.775rem;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 65, lib/styles/base/_0-normalize.scss */
sup {
  top: -0.5em; }

/* line 69, lib/styles/base/_0-normalize.scss */
sub {
  bottom: -0.25em; }

/* line 73, lib/styles/base/_0-normalize.scss */
img {
  border: 0; }

/* line 77, lib/styles/base/_0-normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* line 81, lib/styles/base/_0-normalize.scss */
figure {
  margin: 1em 40px; }

/* line 85, lib/styles/base/_0-normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/* line 91, lib/styles/base/_0-normalize.scss */
pre {
  overflow: auto; }

/* line 95, lib/styles/base/_0-normalize.scss */
code, kbd, pre, samp {
  font-family: monospace,monospace;
  font-size: 1em; }

/* line 100, lib/styles/base/_0-normalize.scss */
button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

/* line 106, lib/styles/base/_0-normalize.scss */
button {
  overflow: visible; }

/* line 110, lib/styles/base/_0-normalize.scss */
button, select {
  text-transform: none; }

/* line 114, lib/styles/base/_0-normalize.scss */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

/* line 119, lib/styles/base/_0-normalize.scss */
button[disabled], html input[disabled] {
  cursor: default; }

/* line 123, lib/styles/base/_0-normalize.scss */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/* line 128, lib/styles/base/_0-normalize.scss */
input {
  line-height: normal; }

/* line 132, lib/styles/base/_0-normalize.scss */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

/* line 137, lib/styles/base/_0-normalize.scss */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/* line 141, lib/styles/base/_0-normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

/* line 148, lib/styles/base/_0-normalize.scss */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/* line 152, lib/styles/base/_0-normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/* line 158, lib/styles/base/_0-normalize.scss */
legend {
  border: 0;
  padding: 0; }

/* line 163, lib/styles/base/_0-normalize.scss */
textarea {
  overflow: auto; }

/* line 167, lib/styles/base/_0-normalize.scss */
optgroup {
  font-weight: bold; }

/* line 171, lib/styles/base/_0-normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 176, lib/styles/base/_0-normalize.scss */
td, th {
  padding: 0; }

/* line 4, lib/styles/base/_1-elements.scss */
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

/* line 11, lib/styles/base/_1-elements.scss */
html {
  font-family: aktiv-grotesk-std, Helvetica Neue, Helvetica, Arial, sans-serif;
  font-weight: 300;
  font-size: 16px; }

/* line 16, lib/styles/base/_1-elements.scss */
body {
  font-size: 100%; }

/* line 35, lib/styles/base/_1-elements.scss */
h1, h2, h3, h4, h5, h6 {
  font-weight: bold; }

/* line 51, lib/styles/base/_1-elements.scss */
p {
  font-weight: 400;
  font-weight: 300;
  text-align: justify;
  line-height: 2;
  margin: 1.5em auto;
  max-width: 40rem; }

/* line 75, lib/styles/base/_1-elements.scss */
a {
  display: inline-block;
  text-decoration: none;
  color: inherit; }
  /* line 79, lib/styles/base/_1-elements.scss */
  a[disabled] {
    color: #999999;
    pointer-events: none; }

/* line 86, lib/styles/base/_1-elements.scss */
small {
  font-weight: normal;
  font-size: .875rem; }

/* line 22, lib/styles/modules/_box.scss */
.overlay-wrap {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
  display: table;
  width: 100%;
  overflow: hidden;
  padding: 3rem;
  text-align: center;
  z-index: 1;
  min-height: 300px; }
  /* line 16, lib/styles/modules/_box.scss */
  .overlay-wrap .overlay {
    display: table-cell;
    vertical-align: middle; }
  /* line 29, lib/styles/modules/_box.scss */
  .overlay-wrap .underlay {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -moz-background-size: cover;
    -o-background-size: cover;
    -webkit-background-size: cover;
    background-size: cover; }
  /* line 38, lib/styles/modules/_box.scss */
  .overlay-wrap .acf-map {
    height: 110%; }

/* line 43, lib/styles/modules/_box.scss */
.txt-box {
  display: inline-block;
  text-align: left;
  margin: 1rem; }

/* line 1, lib/styles/modules/_brand.scss */
#brand {
  padding: 0.75rem; }
  @media screen and (max-width: 40rem) {
    /* line 1, lib/styles/modules/_brand.scss */
    #brand {
      text-align: center; } }

/* line 5, lib/styles/modules/_icon-list.scss */
.list-item {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 1rem 0 !important;
  -moz-transition: color 0.2s ease-in;
  -o-transition: color 0.2s ease-in;
  -webkit-transition: color 0.2s ease-in;
  transition: color 0.2s ease-in; }
  /* line 10, lib/styles/modules/_icon-list.scss */
  .list-item:hover .list-item--icon {
    color: #f72f5d;
    -moz-transition: color 0.2s ease-out;
    -o-transition: color 0.2s ease-out;
    -webkit-transition: color 0.2s ease-out;
    transition: color 0.2s ease-out; }

/* line 15, lib/styles/modules/_icon-list.scss */
.list-item--link {
  display: block;
  clear: both; }

/* line 19, lib/styles/modules/_icon-list.scss */
.list-item--title {
  margin-bottom: .5em;
  padding-bottom: .5em;
  border-bottom: 1px solid #dddddd; }

/* line 26, lib/styles/modules/_icon-list.scss */
.icon-list-omega .octicon:before {
  font-size: 16px; }

/* line 31, lib/styles/modules/_icon-list.scss */
.icon-list-beta .octicon:before {
  font-size: 32px; }

/* line 36, lib/styles/modules/_icon-list.scss */
.icon-list-alpha .list-item--icon {
  width: 6rem;
  text-align: center;
  float: left;
  padding: 0 1rem 1rem 0;
  background-color: #fff; }
/* line 43, lib/styles/modules/_icon-list.scss */
.icon-list-alpha .list-item--text {
  display: block;
  padding-left: 6rem; }
/* line 47, lib/styles/modules/_icon-list.scss */
.icon-list-alpha .octicon:before {
  font-size: 64px; }

/* line 1, lib/styles/modules/_menu.scss */
.menu {
  display: table;
  width: 100%; }
  /* line 4, lib/styles/modules/_menu.scss */
  .menu > * {
    display: table-cell;
    padding: 1em;
    text-align: center; }
    /* line 8, lib/styles/modules/_menu.scss */
    .menu > * + * {
      border-left: 1px solid #DDD; }

/* line 2, lib/styles/modules/_octicon-sizes.scss */
.octicon, .octicon:before {
  vertical-align: middle; }
/* line 5, lib/styles/modules/_octicon-sizes.scss */
.octicon.octicon-before:before {
  margin-right: .325em; }
/* line 8, lib/styles/modules/_octicon-sizes.scss */
.octicon.octicon-after:after {
  margin-left: .325em; }
/* line 11, lib/styles/modules/_octicon-sizes.scss */
.octicon.omega {
  font-size: 32px; }
/* line 14, lib/styles/modules/_octicon-sizes.scss */
.octicon.beta {
  font-size: 64px; }
/* line 17, lib/styles/modules/_octicon-sizes.scss */
.octicon.alpha {
  font-size: 128px; }

@media screen and (max-width: 40rem) {
  /* line 21, lib/styles/modules/_side-scroller.scss */
  #site-nav {
    overflow: scroll;
    -webkit-overflow-scrolling: touch; }
    /* line 5, lib/styles/modules/_side-scroller.scss */
    #site-nav::-webkit-scrollbar, #site-nav::-webkit-scrollbar-button, #site-nav::-webkit-scrollbar-track, #site-nav::-webkit-scrollbar-track-piece, #site-nav::-webkit-scrollbar-thumb, #site-nav::-webkit-scrollbar-corner, #site-nav::-webkit-resizer {
      visibility: hidden;
      display: none;
      opacity: 0;
      width: 0;
      height: 0; } }

@media screen and (max-width: 40rem) {
  /* line 58, lib/styles/style.scss */
  [class*="grid-"] {
    width: 100%; } }
